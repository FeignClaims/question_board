************************************************************************************************************************
函数 (function)
************************************************************************************************************************

函数是一种抽象工具, 它可以 **给一段代码起一个名字**, 通过这个名字, 使用者不需要了解代码具体怎么写的, 就能知道代码的功能并使用代码.

.. code-block:: cpp
  :linenos:

  // 打印欢迎提示, 使用者不需要知道具体怎么打印, 函数名字已经说了是要打印欢迎提示.
  void print_welcome_prompt();

  int main() {
    print_welcome_prompt();  // 调用函数
  }

定义函数时需要指明函数需要的参数和预期的返回值.

.. code-block:: cpp
  :linenos:

  int add(int lhs, int rhs);    // 参数为 (int lhs, int rhs), 返回值为 int
  int generate_random_int();    // 没有参数, 返回值为 int
  void print_value(int value);  // 参数为 (int value), 没有返回值

传参和传返回值可以当作声明变量来理解.

.. code-block:: cpp
  :linenos:
  :caption: 声明变量

  int lhs = a;
  int rhs = b;
  int result = lhs + rhs;

.. code-block:: cpp
  :linenos:
  :caption: 传参和传返回值

  int add(int lhs, int rhs) {
    return lhs + rhs;
  }
  int result = add(a, b);

例如, 下面这段代码交换了 :cpp:`a` 和 :cpp:`b` 的值.

.. code-block:: cpp
  :linenos:

  int& lhs = a;
  int& rhs = b;

  int temp = lhs;
  lhs      = rhs;
  rhs      = temp;

"这段代码交换 (swap) 了 :cpp:`a` 和 :cpp:`b` 的值", 这不就是说, 它可以是一个名叫 :cpp:`swap` 的函数吗?

.. code-block:: cpp
  :linenos:

  void swap(int& lhs, int& rhs) {
    int temp = lhs;
    lhs      = rhs;
    rhs      = temp;
  }
  swap(a, b);  // 可以交换 a 和 b
  swap(a, c);  // 可以交换 a 和 c
  swap(b, c);  // 可以交换 b 和 c

.. note::

  按我的个人习惯, 我更喜欢使用 C++11 起的函数返回值后置语法:

  - :cpp:`int f()` 写为 :cpp:`auto f() -> int`.
  - :cpp:`void f()` 保持不变.

  这样一来可以更清晰地发现链式调用:

  .. code-block:: cpp

    auto multiply_by_2(int value) -> int;
    auto add_1(int value) -> int;

    // (int) -> (int) -> int
    multiply_by_2(add_1(value));

========================================================================================================================
函数的命名建议
========================================================================================================================

------------------------------------------------------------------------------------------------------------------------
表示某种操作 (control) 的函数, 通常命名为谓词性短语
------------------------------------------------------------------------------------------------------------------------

- :cpp:`void print_welcome_prompt()`: 打印欢迎提示.
- :cpp:`void swap(int& lhs, int& rhs)`: 交换两个 :cpp:`int` 值.
- :cpp:`bool is_odd(int value)`: 判断 :cpp:`value` 是否是奇数.
- :cpp:`int generate_random_int()`: 生成随机整数.
- :cpp:`Widget make_widget()`: 创建一个 :cpp:`Widget` 对象.

------------------------------------------------------------------------------------------------------------------------
获得某种信息 (view) 函数的, 通常命名为偏正短语
------------------------------------------------------------------------------------------------------------------------

- :cpp:`int size()`.
- :cpp:`int available_tickets()`.

========================================================================================================================
函数指针 (function pointer)
========================================================================================================================

.. include:: cross/function-pointer.irst

========================================================================================================================
相关解答
========================================================================================================================

- :doc:`/src/faq/variable_decleration_reading/main`
- :doc:`/src/faq/separate_interface_from_implementation/main`