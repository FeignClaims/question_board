************************************************************************************************************************
copy-and-swap: 拷贝赋值函数的简单实现
************************************************************************************************************************

.. TODO

首先明确一点: **如果没有必要定义拷贝构造/赋值函数/析构函数, 就不要定义**, 让编译器为你声明甚至定义. 这里的逻辑相关解释参考 `[运行时错误] 拷贝后发生释放错误 <https://gitee.com/cpp_tutorial/question/issues/I7GJ0R>`_.

如果有定义的需求, 且拷贝仅仅是拷贝, 不是因为题目而有输出之类的特殊要求, 则可以先定义拷贝构造函数、析构函数, 然后利用它们定义拷贝赋值函数, 这称为 copy-and-swap 惯用法.

.. code-block:: cpp

  Widget& operator=(Widget const& other) {
    Widget temp(other);  // 拷贝 other 到 temp
    swap(*this, temp);   // 交换 temp 和 *this 的内容
    return *this;
  }  // temp 的析构函数将会对交换来的 *this 内容完成必要的清理

========================================================================================================================
示例
========================================================================================================================

:godbolt:`fjcjKMGce`

.. literalinclude:: main.cpp
  :language: cpp
  :linenos: