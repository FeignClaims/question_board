***********************************************************************************************************************
二进制输入输出 (binary I/O)
***********************************************************************************************************************

这是一种序列化方式. 所谓序列化就是将对象转换为一种特定的格式 (序列化), 从而可以传输或存储, 而又能从这种特定格式转换为程序中的对象 (反序列化).

一般只是简单考一下, 记住怎么做即可.

=======================================================================================================================
二进制输出
=======================================================================================================================

:cpp:`ofile.write(char const* string, streamsize count)`
  将 :cpp:`[string, string + count)` 字符数组输出到 :cpp:`ofile` 中, 所以我们要将对象强行转换为字符数组.

.. code-block:: cpp
  :linenos:

  #include <fstream>

  int value = 0;

  std::ofstream ofile("输出文件路径", std::ios_base::binary);
  ofile.write(reinterpret_cast<char const*>(value), sizeof(value));

=======================================================================================================================
二进制输入
=======================================================================================================================

:cpp:`ifile.read(char* string, streamsize count)`
  从 :cpp:`ifile` 读入字符到 :cpp:`[string, string + count)` 字符数组中, 所以我们要将对象强行转换为字符数组.

.. code-block:: cpp
  :linenos:

  #include <fstream>

  int value = 0;

  std::ofstream ifile("输入文件路径", std::ios_base::binary);
  ifile.read(reinterpret_cast<char*>(value), sizeof(value));