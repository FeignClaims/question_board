************************************************************************************************************************
转义字符: 为什么 :cpp:`'0'` 的值不是 :cpp:`0` (escape character)
************************************************************************************************************************

通常而言, 字符字面值直接表示要显示的内容, 例如 :cpp:`'0'`, :cpp:`'a'`, :cpp:`','` 等. 所以 :cpp:`cout << '0';` 会直接输出 0.

但是我们又认为, 数值 0 也是一个比较重要的字符, 可 :cpp:`'0'` 已经用于表示数字 0 了, 于是我们决定用 :cpp:`'\\0'` 来表示数值 0.

其中, \\ 是转义符号, 加上它表示该字符是有特殊的含义, 例如 :cpp:`'\\0'` 表示数值 0, :cpp:`'\\n'` 表示换行符 (newline), :cpp:`'\\''` 表示单引号.

这引出另一个问题: 如果我要输出 \\ 呢? 由于 \\ 已经作为了转义字符, 我们使用 :cpp:`'\\\\'` 来表示字符 \\.

========================================================================================================================
个位数与数字字符间的转换
========================================================================================================================

:cpp:`int` 和 :cpp:`char` 之间的转换仅基于数值:

.. code-block:: cpp
  :linenos:
  :caption: :cpp:`'\\0'`

  int  value = 0;
  char digit = value;  // '\0' 字符, 即数值 0

.. code-block:: cpp
  :linenos:
  :caption: :cpp:`'0'`

  int  value = 30;
  char digit = value;  // '0' 字符, 即数字 0

也就是说, 由于 :cpp:`'0'` 的值不是 0, 如果想得到个位数对应的显示字符, 我们需要对它的值进行偏移:

.. code-block:: cpp
  :linenos:
  :caption: 整数个位数转换为对应数字字符

  int  value = 5;
  char digit = value + '0';

.. code-block:: cpp
  :linenos:
  :caption: 数字字符转换为对应整数个位数

  char digit = '5';
  int  value = digit - '0';