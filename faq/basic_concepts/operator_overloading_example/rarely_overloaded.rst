*************************************************************************************************************************
极少重载的运算符
*************************************************************************************************************************

取址运算符: :cpp:`operator&`
  由于该运算符存在重载的可能, 泛型库使用 :cpp:`std::addressof` 来获取用户自定义类型对象的地址.

布尔逻辑运算符: :cpp:`operator&&` 和 :cpp:`operator||`
  不像内置的版本, 重载后的布尔逻辑运算符不遵循 **短路求值规则**.

逗号运算符: :cpp:`operator,`
  由于该运算符存在重载的可能, 泛型库使用诸如 :cpp:`a, void(), b` 或者 :cpp:`a, (void)b` 的表达式而非 :cpp:`a, b` 来控制涉及用户自定义类型的表达式的顺序执行.

通过指针访问成员的成员访问运算符: :cpp:`operator->*`
  没什么实际的应用场景.